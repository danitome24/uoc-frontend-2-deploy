{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/actions/auth.actions.ts","webpack:///src/app/auth/effects/auth.effects.ts","webpack:///src/app/auth/reducers/auth.reducer.ts","webpack:///src/app/auth/signin/signin-routing.module.ts","webpack:///src/app/auth/signin/signin.component.ts","webpack:///src/app/auth/signin/signin.component.html","webpack:///src/app/auth/signin/signin.module.ts","webpack:///src/app/auth/signin/signin.service.ts","webpack:///src/app/offers/actions/my-offers.actions.ts","webpack:///src/app/offers/actions/offer.actions.ts","webpack:///src/app/offers/effects/offer.effects.ts","webpack:///src/app/offers/reducers/my-offers.reducer.ts","webpack:///src/app/offers/reducers/offer.reducer.ts","webpack:///src/app/profile/actions/configuration.actions.ts","webpack:///src/app/profile/reducers/configuration.reducer.ts","webpack:///src/app/reducers/index.ts","webpack:///src/app/shared/app.settings.ts","webpack:///src/app/shared/components/admin-layout/admin-layout.component.ts","webpack:///src/app/shared/components/admin-layout/admin-layout.template.html","webpack:///src/app/shared/core.module.ts","webpack:///src/app/shared/guards/auth.guard.ts","webpack:///src/app/shared/inmemory-db/fake-backend.service.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/services/app-confirm/app-confirm.component.ts","webpack:///src/app/shared/services/app-confirm/app-confirm.service.ts","webpack:///src/app/shared/services/notifications.service.ts","webpack:///src/app/shared/services/offers.service.ts","webpack:///src/app/shared/services/profile.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","rootRouterConfig","path","redirectTo","pathMatch","loadChildren","m","AuthModule","data","title","component","canActivate","children","DashboardModule","breadcrumb","ProfileModule","FavoritesModule","OffersModule","AppComponent","selector","templateUrl","styleUrls","AppModule","withServerTransition","appId","forRoot","useHash","initialNavigation","dataEncapsulation","metaReducers","runtimeChecks","strictStateImmutability","strictActionImmutability","production","instrument","stateKey","register","enabled","imports","declarations","providers","bootstrap","SIGN_IN","SIGN_IN_FAILED","SIGN_IN_SUCCESS","LOGOUT","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_FAILED","FORGOT_PASSWORD_SUCCESS","SHOW_USER_PROFILE","UPDATE_USER_PROFILE","ADD_LANGUAGE","UPDATE_LANGUAGE","DELETE_LANGUAGE","ADD_STUDY","UPDATE_STUDY","DELETE_STUDY","ADD_WORK_EXPERIENCE","UPDATE_WORK_EXPERIENCE","DELETE_WORK_EXPERIENCE","actions","signIn","signInSuccess","signInFailed","logout","forgotPasswordRequest","showUserProfile","updateUserProfile","addLanguage","updateLanguage","deleteLanguage","addStudy","updateStudy","deleteStudy","addWorkExperience","updateWorkExperience","deleteExperience","AuthEffects","actions$","signinService","router","profileService","store$","login$","pipe","payload","login","user","crudStudy$","state","updateProfile","auth","dispatch","updateProfile$","loginSuccess$","navigate","loginFailed$","navigateByUrl","initialState","errorOnLogin","loggedIn","forgottenPassword","reducer","action","type","updatedUserProfile","updatedUser","languages","language","updatedUserLang","filter","lang","uid","newLang","sort","a","b","updatedUserStudy","studies","study","updateUserStudy","newStudy","newUser","newStudies","studyId","newerUser","newLanguages","languageId","console","log","experiencies","experience","userWork","works","work","newWork","userD","newExperiences","experienceId","selectAuthFeature","selectAuthErrorOnLogin","selectAuthIsLoggedIn","selectForgottenPasswordRequested","selectUserProfile","selectShowUserProfile","selectSelectedLanguage","props","find","langUid","selectNextUidLanguage","length","selectNextUidExperience","selectSelectedStudy","selectSelectedExperience","experienceUid","selectNextUidStudy","routes","SigninRoutingModule","forChild","SigninComponent","formBuilder","store","submitted","errorLogin","loginForm","group","email","required","password","value","select","subscribe","hasError","onSubmit","SigninModule","SigninService","http","get","API_ENDPOINT_USERS","toPromise","getUsers","users","SUBSCRIBE_TO_OFFER","UNSUBSCRIBE_TO_OFFER","subscribeToOffer","unsubscribeToOffer","LIST_OFFERS","LIST_OFFERS_SUCCESS","listOffers","listOffersSuccess","OfferEffects","offersService","listOffers$","getOffers","offers","entities","offerId","selectMyOffersFeature","selectOffersFeature","selectMyOffers","myOffers","offer","some","myOfferId","selectIsUserSubscribedTo","selectOfferFeature","selectUserFeature","selectOffersByUserStudies","offerState","userState","category","selectOffersNotMatchingUserStudies","every","PREFERENCES_NOTIFICATIONS_UPDATE","PREFERENCES_LOCALE_UPDATE","notificationsUpdate","localeUpdate","app_locale","APP_DEFAULT_MOMENT_LOCALE","notifications","sendNotifications","locale","selectConfigurationFeature","selectConfigurationAppLocale","selectConfigurationSendNotifications","reducers","preferences","my_offers","effects","AppSettings","size","avatar_hash","IMAGES","UNKNOWN_FACE","split","hash","extension","STATIC_AVATAR_ENDPOINT","APP_NAME","APP_LOCALSTORAGE_TOKEN","APP_VERSION","API_ENDPOINT","STATIC_ENDPOINT","API_ENDPOINT_APP","API_ENDPOINT_USER","API_ENDPOINT_OFFERS","API_ENDPOINT_USER_ME","API_ENDPOINT_USER_CREATE","API_ENDPOINT_CONFIRM_USER","API_ENDPOINT_USER_REMEMBER_PASSWORD","API_ENDPOINT_USER_REQUEST_REMEMBER_PASSWORD","API_ENDPOINT_USER_REQUEST_USER_AVATAR","API_ENDPOINT_USER_UPLOAD_AVATAR","API_ENDPOINT_USER_SENDMAIL","API_ENDPOINT_AUTH","API_ENDPOINT_AUTH_LOCAL","APP_QUILL_EDITOR_CONFIGURATION","toolbar","list","direction","GUESS_ROL","text","STUDENT_ROL","ADMINISTRATOR_ROL","COMPANY_ROL","ROLES","APP_LOCALES","name","USER_STATUS_PENDING","USER_STATUS_ACTIVE","USER_STATUS_INACTIVE","USER_STATUS","FORMAT_DATE","UNKNOWN_IMAGE","UNKNOWN_TEAM","NOTIFICATIONS","DEFAULT_TIME","AdminLayoutComponent","CORE_SERVICES","CoreModule","parentModule","AuthGuard","next","isLoggedIn","providedIn","FakeBackendService","username","surname","birthdate","phone","phone2","roles","documentType","documentNumber","license","aboutMe","otherCompetences","address","street","province","municipe","level","institution","grade","date","dual","bilingue","certificate","company","position","job","description","MaterialModule","AppComfirmComponent","template","AppConfirmService","NotificationsService","message","OffersService","_offers","ProfileService","_user","profile","put","post","uidAndHash","sharedExports","SharedModule","entryComponents","environment","document","addEventListener","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\nimport { Routes } from '@angular/router';\nimport {AuthGuard} from './shared/guards/auth.guard';\n\nexport const rootRouterConfig: Routes = [\n  {\n    path: '',\n    redirectTo: 'auth',\n    pathMatch: 'full'\n  },\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./auth/auth.module').then(m => m.AuthModule),\n    data: { title: 'Auth' }\n  },\n  {\n    path: 'admin',\n    component: AdminLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () =>\n          import('./views/dashboard/dashboard.module').then(\n            m => m.DashboardModule\n          ),\n\n        data: { title: 'Dashboard', breadcrumb: 'DASHBOARD' }\n      },\n      {\n        path: 'profile',\n        loadChildren: () =>\n          import('./profile/profile.module').then(m => m.ProfileModule),\n        data: { title: 'Profile', breadcrumb: 'PROFILE' }\n      },\n      {\n        path: 'favorites',\n        loadChildren: () =>\n          import('./views/favorites/favorites.module').then(\n            m => m.FavoritesModule\n          ),\n\n        data: { title: 'Favorites', breadcrumb: 'FAVORITES' }\n      },\n      {\n        path: 'offers',\n        loadChildren: () =>\n          import('./offers/offers.module').then(m => m.OffersModule),\n        data: { title: 'Offers', breadcrumb: 'Offers' }\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'sessions/404'\n  }\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'UOCJob';\n}\n","<router-outlet></router-outlet>\n","import {AppComponent} from './app.component';\nimport {CoreModule} from './shared/core.module';\nimport {FakeBackendService} from './shared/inmemory-db/fake-backend.service';\nimport {HttpClientInMemoryWebApiModule} from 'angular-in-memory-web-api';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from './shared/shared.module';\nimport {rootRouterConfig} from './app-routing';\nimport {StoreModule} from '@ngrx/store';\nimport * as fromRoot from './reducers/index';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {environment} from '../environments/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {SigninModule} from './auth/signin/signin.module';\nimport {metaReducers} from './reducers';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\n        SharedModule,\n        CoreModule,\n        RouterModule.forRoot(rootRouterConfig, { useHash: false, initialNavigation: 'enabled' }),\n        HttpClientModule,\n        SigninModule,\n        HttpClientInMemoryWebApiModule.forRoot(FakeBackendService, {\n            dataEncapsulation: false\n        }),\n        StoreModule.forRoot(\n            fromRoot.reducers,\n            {\n                metaReducers,\n                runtimeChecks: {\n                    strictStateImmutability: true,\n                    strictActionImmutability: true,\n                }\n            }\n        ),\n        EffectsModule.forRoot(fromRoot.effects),\n        !environment.production ? StoreDevtoolsModule.instrument() : [],\n        StoreRouterConnectingModule.forRoot({stateKey: 'router'}),\n        NoopAnimationsModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n    declarations: [AppComponent],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {createAction, props} from '@ngrx/store';\nimport {User} from '../../shared/models/user.model';\nimport {Language} from '../../shared/models/language.model';\nimport {CollegeStudy, VocationalStudy} from '../../shared/models/study.model';\nimport {Experience} from '../../shared/models/experience.model';\n\nexport const SIGN_IN = '[SignIn Page] SignIn';\nexport const SIGN_IN_FAILED = '[SignIn Page] SignInFailed';\nexport const SIGN_IN_SUCCESS = '[SignIn Page] SignInSuccess';\nexport const LOGOUT = '[Logout Page] Logout';\nexport const FORGOT_PASSWORD_REQUEST = '[Forgotten Page] ForgotPasswordRequest';\nexport const FORGOT_PASSWORD_FAILED = '[Forgotten Page] ForgotPasswordFailed';\nexport const FORGOT_PASSWORD_SUCCESS = '[Forgotten Page] ForgotPasswordSuccess';\n\n// Profile. TODO move this to profile module.\nexport const SHOW_USER_PROFILE = '[Profile Page] ShowUserProfile';\nexport const UPDATE_USER_PROFILE = '[Profile Page] UpdateUserProfile';\nexport const ADD_LANGUAGE = '[Profile Language Page] AddLanguage';\nexport const UPDATE_LANGUAGE = '[Profile Language Page] UpdateLanguage';\nexport const DELETE_LANGUAGE = '[Profile Language Page] DeleteLanguage';\nexport const ADD_STUDY = '[Profile Study Page] AddStudy';\nexport const UPDATE_STUDY = '[Profile Study Page] UpdateStudy';\nexport const DELETE_STUDY = '[Profile Study Page] DeleteStudy';\nexport const ADD_WORK_EXPERIENCE = '[Profile Study Page] AddWorkExperience';\nexport const UPDATE_WORK_EXPERIENCE = '[Profile Study Page] UpdateWorkExperience';\nexport const DELETE_WORK_EXPERIENCE = '[Profile Study Page] DeleteWorkExperience';\n\nexport const actions = {\n        signIn: createAction(\n            SIGN_IN,\n            props<{ email: string, password: string }>()\n        ),\n        signInSuccess: createAction(\n            SIGN_IN_SUCCESS,\n            props<{ user: User }>()\n        ),\n        signInFailed: createAction(\n            SIGN_IN_FAILED,\n            props<{}>()\n        ),\n        logout: createAction(\n            LOGOUT,\n            props<{}>()\n        ),\n        // ForgotPassword\n        forgotPasswordRequest: createAction(\n            FORGOT_PASSWORD_REQUEST,\n            props<{ email: string }>()\n        ),\n        // Profile. TODO move this to profile module.\n        showUserProfile: createAction(\n            SHOW_USER_PROFILE\n        ),\n        updateUserProfile: createAction(\n            UPDATE_USER_PROFILE,\n            props<{ user: User }>()\n        ),\n        addLanguage: createAction(\n            ADD_LANGUAGE,\n            props<{ language: Language }>()\n        ),\n        updateLanguage: createAction(\n            UPDATE_LANGUAGE,\n            props<{ language: Language }>()\n        ),\n        deleteLanguage: createAction(\n            DELETE_LANGUAGE,\n            props<{languageId: number}>()\n        ),\n        addStudy: createAction(\n            ADD_STUDY,\n            props<{study: VocationalStudy | CollegeStudy}>()\n        ),\n        updateStudy: createAction(\n            UPDATE_STUDY,\n            props<{study: VocationalStudy | CollegeStudy}>()\n        ),\n        deleteStudy: createAction(\n            DELETE_STUDY,\n            props<{studyId: number}>()\n        ),\n        addWorkExperience: createAction(\n            ADD_WORK_EXPERIENCE,\n            props<{experience: Experience}>()\n        ),\n        updateWorkExperience: createAction(\n            UPDATE_WORK_EXPERIENCE,\n            props<{experience: Experience}>()\n        ),\n        deleteExperience: createAction(\n            DELETE_WORK_EXPERIENCE,\n            props<{experienceId: number}>()\n        )\n    }\n;\n","import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport * as fromAuth from '../actions/auth.actions';\nimport {SigninService} from '../signin/signin.service';\nimport {from} from 'rxjs';\nimport {User} from '../../shared/models/user.model';\nimport {Router} from '@angular/router';\nimport {ProfileService} from '../../shared/services/profile.service';\nimport {Store} from '@ngrx/store';\nimport {State} from '../../reducers/index';\n\n@Injectable()\nexport class AuthEffects {\n    constructor(private actions$: Actions, private signinService: SigninService, private router: Router,\n                private profileService: ProfileService, private store$: Store<State>) {\n    }\n\n    // @ts-ignore\n    login$ = createEffect(() => this.actions$.pipe(\n        ofType(fromAuth.SIGN_IN),\n        switchMap(payload => {\n            return from(this.signinService.login(payload));\n        }),\n        map((user: null | User) => {\n            if (null == user) {\n                return fromAuth.actions.signInFailed({});\n            }\n            return fromAuth.actions.signInSuccess({user});\n        }),\n    ));\n\n    crudStudy$ = createEffect(() => this.actions$.pipe(\n        ofType(fromAuth.DELETE_STUDY, fromAuth.ADD_STUDY, fromAuth.UPDATE_STUDY, fromAuth.DELETE_LANGUAGE, fromAuth.ADD_LANGUAGE, fromAuth.UPDATE_LANGUAGE),\n        withLatestFrom(this.store$),\n        switchMap(([payload, state]) => {\n            return from(this.profileService.updateProfile(state.auth.user));\n        }),\n    ), {dispatch: false});\n\n    updateProfile$ = createEffect(() => this.actions$.pipe(\n        ofType(fromAuth.UPDATE_USER_PROFILE),\n        switchMap((payload: { user: User }) => {\n            return from(this.profileService.updateProfile(payload.user));\n        }),\n    ), {dispatch: false});\n\n    // @ts-ignore\n\n    loginSuccess$ = createEffect(() => this.actions$.pipe(\n        ofType(fromAuth.SIGN_IN_SUCCESS),\n        map(() => {\n            return this.router.navigate(['admin', 'dashboard']);\n        })\n    ), {dispatch: false});\n\n    loginFailed$ = createEffect(() => this.actions$.pipe(\n        ofType(fromAuth.SIGN_IN_FAILED),\n        map(() => {\n            this.router.navigateByUrl('/');\n        })),\n        {dispatch: false}\n    );\n}\n","import {User} from '../../shared/models/user.model';\nimport {\n    ADD_LANGUAGE,\n    ADD_STUDY, ADD_WORK_EXPERIENCE, DELETE_LANGUAGE,\n    DELETE_STUDY, DELETE_WORK_EXPERIENCE,\n    FORGOT_PASSWORD_REQUEST,\n    LOGOUT,\n    SIGN_IN,\n    SIGN_IN_FAILED,\n    SIGN_IN_SUCCESS,\n    UPDATE_LANGUAGE,\n    UPDATE_STUDY,\n    UPDATE_USER_PROFILE, UPDATE_WORK_EXPERIENCE\n} from '../actions/auth.actions';\nimport {Auth} from '../../shared/models/auth.model';\nimport {createFeatureSelector, createSelector} from '@ngrx/store';\n\nexport interface State {\n    user: User | null;\n    auth: Auth;\n}\n\nexport const initialState: State = {\n    user: null,\n    auth: {\n        errorOnLogin: false,\n        loggedIn: false,\n        forgottenPassword: false,\n    },\n};\n\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case SIGN_IN:\n            return {\n                ...state,\n            };\n\n        case SIGN_IN_FAILED:\n            return {\n                ...state,\n                auth: {\n                    errorOnLogin: true,\n                    loggedIn: false,\n                    forgottenPassword: false\n                }\n            };\n\n        case SIGN_IN_SUCCESS:\n            return {\n                ...state,\n                user: action.user,\n                auth: {\n                    errorOnLogin: false,\n                    loggedIn: true,\n                    forgottenPassword: false\n                }\n            };\n        case UPDATE_USER_PROFILE:\n            const updatedUserProfile = {\n                ...state.user,\n                ...action.user\n            };\n            return {\n                ...state,\n                user: updatedUserProfile\n            };\n        case LOGOUT:\n            return {\n                ...initialState\n            };\n        case FORGOT_PASSWORD_REQUEST:\n            return {\n                ...state,\n                auth: {\n                    errorOnLogin: false,\n                    loggedIn: false,\n                    forgottenPassword: true\n                }\n            };\n        case ADD_LANGUAGE:\n            const updatedUser = {\n                ...state.user\n            };\n            updatedUser.languages = [\n                ...state.user.languages,\n                action.language\n            ];\n            return {\n                ...state,\n                user: updatedUser\n            };\n        case UPDATE_LANGUAGE:\n            const updatedUserLang = {\n                ...state.user\n            };\n            const languages = state.user.languages.filter(lang => lang.uid !== action.language.uid);\n            const newLang = [\n                ...languages,\n                action.language\n            ].sort((a, b) => {\n                return a.uid - b.uid;\n            });\n            updatedUserLang.languages = newLang;\n            return {\n                ...state,\n                user: updatedUserLang\n            };\n        case ADD_STUDY:\n            const updatedUserStudy = {\n                ...state.user\n            };\n            updatedUserStudy.studies = [\n                ...state.user.studies,\n                action.study\n            ];\n            return {\n                ...state,\n                user: updatedUserStudy\n            };\n        case UPDATE_STUDY:\n            const updateUserStudy = {\n                ...state.user\n            };\n            const studies = state.user.studies.filter(study => study.uid !== action.study.uid);\n            const newStudy = [\n                ...studies,\n                action.study\n            ].sort((a, b) => {\n                return a.uid - b.uid;\n            });\n            updateUserStudy.studies = newStudy;\n            return {\n                ...state,\n                user: updateUserStudy\n            };\n        case DELETE_STUDY:\n            const newUser = {\n                ...state.user\n            };\n            const newStudies = newUser.studies.filter(study => study.uid !== action.studyId);\n            newUser.studies = [\n                ...newStudies\n            ];\n            return {\n                ...state,\n                user: newUser\n            };\n        case DELETE_LANGUAGE:\n            const newerUser = {\n                ...state.user\n            };\n            const newLanguages = newerUser.languages.filter(lang => lang.uid !== action.languageId);\n            newerUser.languages = [\n                ...newLanguages\n            ];\n            console.log(newLanguages);\n            return {\n                ...state,\n                user: newerUser\n            };\n        case ADD_WORK_EXPERIENCE:\n            const user = {\n                ...state.user\n            };\n            user.experiencies = [\n                ...state.user.experiencies,\n                action.experience\n            ];\n            return {\n                ...state,\n                user\n            };\n        case UPDATE_WORK_EXPERIENCE:\n            const userWork = {\n                ...state.user\n            };\n            const works = state.user.experiencies.filter(work => work.uid !== action.experience.uid);\n            const newWork = [\n                ...works,\n                action.experience\n            ].sort((a, b) => {\n                return a.uid - b.uid;\n            });\n            userWork.experiencies = newWork;\n            return {\n                ...state,\n                user: userWork\n            };\n        case DELETE_WORK_EXPERIENCE:\n            const userD = {\n                ...state.user\n            };\n            const newExperiences = userD.experiencies.filter(experience => experience.uid !== action.experienceId);\n            userD.experiencies = [\n                ...newExperiences\n            ];\n            return {\n                ...state,\n                user: userD\n            };\n        default:\n            return state;\n    }\n}\n\n// Selectors\n\nexport const selectAuthFeature = createFeatureSelector('auth');\nexport const selectAuthErrorOnLogin = createSelector(\n    selectAuthFeature,\n    (state: State) => state.auth.errorOnLogin\n);\nexport const selectAuthIsLoggedIn = createSelector(\n    selectAuthFeature,\n    (state: State) => state.auth.loggedIn\n);\nexport const selectForgottenPasswordRequested = createSelector(\n    selectAuthFeature,\n    (state: State) => state.auth.forgottenPassword\n);\n\n// Selectors\n// TODO move this to profile module\nexport const selectUserProfile = createFeatureSelector('auth');\nexport const selectShowUserProfile = createSelector(\n    selectUserProfile,\n    (state: State) => state.user\n);\nexport const selectSelectedLanguage = createSelector(\n    selectUserProfile,\n    (state: State, props: { langUid: number }) => {\n        return state.user.languages.find(language => language.uid === props.langUid);\n    }\n);\nexport const selectNextUidLanguage = createSelector(\n    selectUserProfile,\n    (state: State) => {\n        return state.user.languages.length + 1;\n    }\n);\nexport const selectNextUidExperience = createSelector(\n    selectUserProfile,\n    (state: State) => {\n        return state.user.experiencies.length + 1;\n    }\n);\nexport const selectSelectedStudy = createSelector(\n    selectUserProfile,\n    (state: State, props: { studyId: number }) => state.user.studies.find(study => study.uid === props.studyId)\n);\nexport const selectSelectedExperience = createSelector(\n    selectUserProfile,\n    (state: State, props: { experienceUid: number }) => state.user.experiencies.find(study => study.uid === props.experienceUid)\n);\nexport const selectNextUidStudy = createSelector(\n    selectUserProfile,\n    (state: State) => {\n        return state.user.studies.length + 1;\n    }\n);\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninComponent } from './signin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigninComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SigninRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {SigninService} from './signin.service';\nimport {ProfileService} from 'src/app/shared/services/profile.service';\nimport {Store} from '@ngrx/store';\nimport {actions as SignInActions} from '../actions/auth.actions';\nimport * as fromAuth from '../reducers/auth.reducer';\n\n@Component({\n    selector: 'app-signin',\n    templateUrl: './signin.component.html',\n    styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n    loginForm: FormGroup;\n    submitted = false;\n    errorLogin = false;\n\n    constructor(\n        private signinService: SigninService,\n        private profileService: ProfileService,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private store: Store\n    ) {\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            email: ['', [Validators.email, Validators.required]],\n            password: ['', Validators.required]\n        });\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        this.store.dispatch(SignInActions.signIn({\n            email: this.loginForm.value.email,\n            password: this.loginForm.value.password\n        }));\n        this.store.select(fromAuth.selectAuthErrorOnLogin).subscribe((hasError) => {\n            this.errorLogin = hasError;\n        });\n    }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <mat-error *ngIf=\"errorLogin\">\n                There is an error in email or password\n            </mat-error>\n            <mat-form-field appearance=\"fill\" class=\"full-width-input\">\n                <mat-label for=\"email\">Email</mat-label>\n                <input matInput\n                       type=\"text\"\n                       id=\"email\"\n                       formControlName=\"email\"\n                       class=\"form-control\"\n                />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" class=\"full-width-input\">\n                <label for=\"password\">Password</label>\n                <input matInput\n                       type=\"password\"\n                       id=\"password\"\n                       formControlName=\"password\"\n                       class=\"form-control\"\n                />\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">\n                Login\n            </button>\n            <a mat-button routerLink=\"/auth/forgot-password\">Remember password</a>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import {NgModule} from '@angular/core';\n\nimport {SigninRoutingModule} from './signin-routing.module';\nimport {SigninComponent} from './signin.component';\nimport {SharedModule} from 'src/app/shared/shared.module';\nimport {SigninService} from './signin.service';\nimport {MaterialModule} from '../../shared/material.module';\n\n@NgModule({\n    declarations: [SigninComponent],\n    imports: [\n        SharedModule,\n        SigninRoutingModule,\n        MaterialModule\n    ],\n    providers: [SigninService]\n})\nexport class SigninModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from 'src/app/shared/app.settings';\n\n@Injectable()\nexport class SigninService {\n  constructor(private http: HttpClient) {}\n\n  getUsers() {\n    return this.http.get<any>(AppSettings.API_ENDPOINT_USERS).toPromise();\n  }\n\n  async login({ email, password }): Promise<any> {\n    const users = await this.getUsers();\n    // Mock response from backend:\n    return users.find(\n      (user: any) => user.email === email && user.password === password\n    );\n  }\n}\n","import {createAction, props} from '@ngrx/store';\n\nexport const SUBSCRIBE_TO_OFFER = '[My-Offers Page] SubscribeToOffer';\nexport const UNSUBSCRIBE_TO_OFFER = '[My-Offers Page] UnsubscribeToOffer';\n\nexport const actions = {\n    subscribeToOffer: createAction(\n        SUBSCRIBE_TO_OFFER,\n        props<{ offerId: number }>()\n    ),\n    unsubscribeToOffer: createAction(\n        UNSUBSCRIBE_TO_OFFER,\n        props<{ offerId: number }>()\n    )\n};\n","import {createAction, props} from '@ngrx/store';\nimport {Offer} from '../../shared/models/offer.model';\n\nexport const LIST_OFFERS = '[Offers Page] ListOffers';\nexport const LIST_OFFERS_SUCCESS = '[Offers Page] ListOffersSuccess';\n\nexport const actions = {\n        listOffers: createAction(\n            LIST_OFFERS,\n            props<{}>()\n        ),\n        listOffersSuccess: createAction(\n            LIST_OFFERS_SUCCESS,\n            props<{ offers: [Offer] }>()\n        )\n    }\n;\n","import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport * as fromOffer from '../actions/offer.actions';\nimport {map, switchMap} from 'rxjs/operators';\nimport {OffersService} from '../../shared/services/offers.service';\n\n@Injectable()\nexport class OfferEffects {\n    constructor(private actions$: Actions, private offersService: OffersService) {\n    }\n\n    // @ts-ignore\n    listOffers$ = createEffect(() => this.actions$.pipe(\n        ofType(fromOffer.LIST_OFFERS),\n        switchMap(() => {\n            return this.offersService.getOffers();\n        }),\n        map(offers => {\n            return fromOffer.actions.listOffersSuccess({offers});\n        })\n    ));\n}\n","import * as fromMyOffers from '../actions/my-offers.actions';\nimport {State as OfferState} from '../reducers/offer.reducer';\nimport {createFeatureSelector, createSelector} from '@ngrx/store';\nimport {Offer} from '../../shared/models/offer.model';\n\nexport interface State {\n    entities: [] | number[];\n}\n\nexport const initialState: State = {\n    entities: [],\n};\n\nexport function reducer(state: State = initialState, action) {\n    switch (action.type) {\n        case fromMyOffers.SUBSCRIBE_TO_OFFER:\n            return {\n                entities: [...state.entities, action.offerId]\n            };\n\n        case fromMyOffers.UNSUBSCRIBE_TO_OFFER:\n            const entities = state.entities.filter(offerId => offerId !== action.offerId);\n            return {\n                entities\n            };\n        default:\n            return state;\n    }\n}\n\n// Selectors\nexport const selectMyOffersFeature = createFeatureSelector('my_offers');\nexport const selectOffersFeature = createFeatureSelector('offers');\nexport const selectMyOffers = createSelector(\n    selectMyOffersFeature,\n    selectOffersFeature,\n    (myOffers: State, offers: OfferState) => {\n        return offers.entities.filter((offer: Offer) => {\n            return myOffers.entities.some(myOfferId => myOfferId === offer.id);\n        });\n    }\n);\nexport const selectIsUserSubscribedTo = createSelector(\n    selectMyOffersFeature,\n    (myOffers: State, props: { offerId: number }) => {\n        return myOffers.entities.some(myOfferId => myOfferId === props.offerId);\n    }\n);\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\nimport {Offer} from '../../shared/models/offer.model';\nimport * as fromOffer from '../actions/offer.actions';\nimport {State as UserState} from '../../auth/reducers/auth.reducer';\n\nexport interface State {\n    entities: [] | [Offer];\n}\n\nexport const initialState: State = {\n    entities: [],\n};\n\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case fromOffer.LIST_OFFERS_SUCCESS:\n            return {\n                ...state,\n                entities: action.offers\n            };\n        default:\n            return state;\n    }\n}\n\n// Selectors\nexport const selectOfferFeature = createFeatureSelector('offers');\nexport const selectUserFeature = createFeatureSelector('auth');\nexport const selectOffersByUserStudies = createSelector(\n    selectOfferFeature,\n    selectUserFeature,\n    (offerState: State, userState: UserState) => {\n        return offerState.entities.filter((offer: Offer) => {\n            return userState.user.studies.some(study => study.uid === offer.category.uid);\n        });\n    }\n);\nexport const selectOffersNotMatchingUserStudies = createSelector(\n    selectOfferFeature,\n    selectUserFeature,\n    (offerState: State, userState: UserState) => {\n        return offerState.entities.filter((offer: Offer) => {\n            return userState.user.studies.every(study => study.uid !== offer.category.uid);\n        });\n    }\n);\n","import {createAction, props} from '@ngrx/store';\n\nexport const PREFERENCES_NOTIFICATIONS_UPDATE = '[Config Page] NotificationsUpdate';\nexport const PREFERENCES_LOCALE_UPDATE = '[Config Page] LocaleUpdate';\n\nexport const actions = {\n    notificationsUpdate: createAction(\n        PREFERENCES_NOTIFICATIONS_UPDATE,\n        props<{ sendNotifications: boolean }>()\n    ),\n    localeUpdate: createAction(\n        PREFERENCES_LOCALE_UPDATE,\n        props<{ locale: { id: number, name: string, locale: string } }>()\n    ),\n};\n","import {AppSettings} from '../../shared/app.settings';\nimport {createFeatureSelector, createSelector} from '@ngrx/store';\nimport * as fromConfig from '../actions/configuration.actions';\n\nexport interface State {\n    app_locale: { id, name, locale };\n    notifications: boolean;\n}\n\nexport const initialState: State = {\n    app_locale: AppSettings.APP_DEFAULT_MOMENT_LOCALE,\n    notifications: false\n};\n\n// Reducer\nexport function reducer(state = initialState, action) {\n    switch (action.type) {\n        case fromConfig.PREFERENCES_NOTIFICATIONS_UPDATE:\n            return {\n                ...state,\n                notifications: action.sendNotifications\n            };\n        case fromConfig.PREFERENCES_LOCALE_UPDATE:\n            return {\n                ...state,\n                app_locale: action.locale\n            };\n        default:\n            return state;\n    }\n}\n\n// Selectors\nexport const selectConfigurationFeature = createFeatureSelector('preferences');\n\nexport const selectConfigurationAppLocale = createSelector(\n    selectConfigurationFeature,\n    (state: State) => state.app_locale\n);\n\nexport const selectConfigurationSendNotifications = createSelector(\n    selectConfigurationFeature,\n    (state: State) => state.notifications\n);\n","import {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '../../environments/environment';\nimport {routerReducer} from '@ngrx/router-store';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport * as fromAuth from '../auth/reducers/auth.reducer';\nimport {AuthEffects} from '../auth/effects/auth.effects';\nimport * as fromConfig from '../profile/reducers/configuration.reducer';\nimport * as fromOffer from '../offers/reducers/offer.reducer';\nimport * as fromMyOffer from '../offers/reducers/my-offers.reducer';\nimport {OfferEffects} from '../offers/effects/offer.effects';\n\nexport interface State {\n    router;\n    auth: fromAuth.State;\n    preferences: fromConfig.State;\n    offers: fromOffer.State;\n    my_offers: fromMyOffer.State;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n    router: routerReducer,\n    auth: fromAuth.reducer,\n    preferences: fromConfig.reducer,\n    offers: fromOffer.reducer,\n    my_offers: fromMyOffer.reducer,\n};\n\nexport const effects = [AuthEffects, OfferEffects];\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [storeFreeze] : [];\n","/* import * as moment from 'moment'; */\nexport class AppSettings {\n  public static readonly APP_NAME = 'PoliJob';\n  public static readonly APP_LOCALSTORAGE_TOKEN = 'PoliJob_Token';\n  public static readonly APP_VERSION = '0.1.0';\n  public static readonly API_ENDPOINT = 'api/';\n  public static readonly STATIC_ENDPOINT = AppSettings.API_ENDPOINT + 'static/';\n  public static readonly STATIC_AVATAR_ENDPOINT =\n    AppSettings.STATIC_ENDPOINT + 'images/avatar/';\n  public static readonly API_ENDPOINT_APP = AppSettings.API_ENDPOINT + 'app/';\n  public static readonly API_ENDPOINT_USER = AppSettings.API_ENDPOINT + 'user';\n  public static readonly API_ENDPOINT_USERS =\n    AppSettings.API_ENDPOINT + 'users';\n  public static readonly API_ENDPOINT_OFFERS =\n    AppSettings.API_ENDPOINT + 'offers';\n  public static readonly API_ENDPOINT_USER_ME =\n    AppSettings.API_ENDPOINT + 'user-me';\n  public static readonly API_ENDPOINT_USER_CREATE =\n    AppSettings.API_ENDPOINT_USER + '/create';\n  public static readonly API_ENDPOINT_CONFIRM_USER =\n    AppSettings.API_ENDPOINT_USER + '/confirm-user';\n  public static readonly API_ENDPOINT_USER_REMEMBER_PASSWORD =\n    AppSettings.API_ENDPOINT_USER + '/remember-password';\n  public static readonly API_ENDPOINT_USER_REQUEST_REMEMBER_PASSWORD =\n    AppSettings.API_ENDPOINT_USER + '/request-remember-password';\n  public static readonly API_ENDPOINT_USER_REQUEST_USER_AVATAR =\n    AppSettings.API_ENDPOINT_USER + '/request-avatar-user';\n\n  public static readonly API_ENDPOINT_USER_UPLOAD_AVATAR =\n    AppSettings.API_ENDPOINT_USER + '/upload-avatar';\n  public static readonly API_ENDPOINT_USER_SENDMAIL =\n    AppSettings.API_ENDPOINT_USER + '/sendmail';\n  public static readonly API_ENDPOINT_AUTH = AppSettings.API_ENDPOINT + 'auth/';\n  public static readonly API_ENDPOINT_AUTH_LOCAL =\n    AppSettings.API_ENDPOINT + 'auth/local/';\n\n  public static readonly APP_QUILL_EDITOR_CONFIGURATION = {\n    toolbar: [\n      ['bold', 'italic', 'underline'],\n      [{ list: 'ordered' }, { list: 'bullet' }],\n      [{ direction: 'rtl' }],\n      ['clean'],\n      ['link']\n    ]\n  };\n\n  public static readonly GUESS_ROL = {\n    value: 'guess',\n    text: 'settings.rol.GUESS'\n  };\n  public static readonly STUDENT_ROL = {\n    value: 'student',\n    text: 'settings.rol.STUDENT'\n  };\n  public static readonly ADMINISTRATOR_ROL = {\n    value: 'admin',\n    text: 'settings.rol.ADMINISTRATOR'\n  };\n  public static readonly COMPANY_ROL = {\n    value: 'company',\n    text: 'settings.rol.COMPANY'\n  };\n  public static readonly ROLES = [\n    AppSettings.GUESS_ROL,\n    AppSettings.STUDENT_ROL,\n    AppSettings.COMPANY_ROL,\n    AppSettings.ADMINISTRATOR_ROL\n  ];\n  public static readonly APP_LOCALES = [\n    { id: 1, name: 'Castellano', locale: 'es' },\n    { id: 2, name: 'Inglés', locale: 'en' },\n    { id: 3, name: 'Francés', locale: 'fr' }\n  ];\n  public static readonly APP_DEFAULT_MOMENT_LOCALE = { id: 1, name: 'Castellano', locale: 'es' };\n  public static readonly USER_STATUS_PENDING = {\n    value: 'pending',\n    text: 'settings.status.PENDING'\n  };\n  public static readonly USER_STATUS_ACTIVE = {\n    value: 'active',\n    text: 'settings.status.ACTIVE'\n  };\n  public static readonly USER_STATUS_INACTIVE = {\n    value: 'inactive',\n    text: 'settings.status.INACTIVE'\n  };\n  public static readonly USER_STATUS = [\n    AppSettings.USER_STATUS_PENDING,\n    AppSettings.USER_STATUS_ACTIVE,\n    AppSettings.USER_STATUS_INACTIVE\n  ];\n  public static readonly FORMAT_DATE = 'MM/DD/YYYY';\n\n  public static readonly IMAGES = {\n    UNKNOWN_IMAGE: 'assets/images/image-not-found.png',\n    UNKNOWN_FACE: 'assets/images/face-unknown.png',\n    UNKNOWN_TEAM: 'assets/images/image-not-found.png'\n  };\n\n  public static readonly NOTIFICATIONS = {\n    DEFAULT_TIME: 2000\n  };\n\n  public static getAvatar(\n    user: { uid: string; avatar_hash: string },\n    size: string = 'sm'\n  ): string {\n    if (!user || !user.avatar_hash) {\n      return this.IMAGES.UNKNOWN_FACE;\n    }\n    const [hash, extension] = user.avatar_hash.split('.');\n    return `${this.STATIC_AVATAR_ENDPOINT}${user.uid}/${hash}${size}.${extension}`;\n  }\n  /*  public static getDateFormatted(date: moment.Moment | string) {\n    let dateFormatted = date;\n    if (typeof date === 'string') {\n      dateFormatted = moment(date, 'X');\n    }\n    return (dateFormatted as moment.Moment).format(this.FORMAT_DATE);\n  } */\n}\n","import { Component } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from '../../app.settings';\nimport { OffersService } from '../../services/offers.service';\nimport {Store} from '@ngrx/store';\nimport {actions as SignInActions} from '../../../auth/actions/auth.actions';\n\n@Component({\n  selector: 'app-admin-layout',\n  styleUrls: ['./admin-layout.component.scss'],\n  templateUrl: './admin-layout.template.html'\n})\nexport class AdminLayoutComponent {\n  public menus: [\n    {\n      'name': 'Dashboard',\n      'icon': 'dashboard',\n      'link': false,\n      'open': false,\n      'chip': { 'value': 1, 'color': 'accent' },\n      'sub': [\n        {\n          'name': 'Dashboard',\n          'link': '/auth/dashboard',\n          'icon': 'dashboard',\n          'chip': false,\n          'open': true,\n        }\n      ]\n    },\n  ];\n\n  /* MOCK PURPOSES */\n  constructor(\n    private profileService: ProfileService,\n    private offersService: OffersService,\n    private http: HttpClient,\n    private store: Store\n  ) {\n    this.login({ email: 'carlos.caballero@gmail.com', password: '1234' }).then(\n      user => {\n        this.profileService.user = user;\n      }\n    );\n    this.offersService.getOffers().subscribe(offers => {\n      this.offersService.offers = offers;\n    });\n  }\n\n  getUsers() {\n    return this.http.get<any>(AppSettings.API_ENDPOINT_USERS).toPromise();\n  }\n\n  async login({ email, password }): Promise<any> {\n    const users = await this.getUsers();\n    // Mock response from backend:\n    return users.find(\n      (user: any) => user.email === email && user.password === password\n    );\n  }\n\n  logout() {\n    this.store.dispatch(SignInActions.logout({}));\n  }\n}\n","<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav mode=\"side\" opened>\n        <mat-nav-list>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/admin/dashboard']\">\n                <mat-icon class=\"sidenav-icon\">dashboard</mat-icon>\n                Dashboard\n            </a>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/admin/profile']\">\n                <mat-icon class=\"sidenav-icon\">people</mat-icon>\n                Perfil\n            </a>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/admin/offers']\">\n                <mat-icon class=\"sidenav-icon\">search</mat-icon>\n                Ofertas\n            </a>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/admin/profile/config']\">\n                <mat-icon class=\"sidenav-icon\">settings</mat-icon>\n                Configuración\n            </a>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/admin/offers/my-offers']\">\n                <mat-icon class=\"sidenav-icon\">move_to_inbox</mat-icon>\n                Mis ofertas\n            </a>\n            <a mat-list-item>\n                <mat-icon class=\"sidenav-icon\">power_settings_new</mat-icon>\n                <a href=\"#\" (click)=\"logout()\">Logout</a>\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule, Optional, SkipSelf, Provider } from '@angular/core';\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n/* import { JWTInterceptor } from './interceptors/jwt.interceptor'; */\n/* import { JwtExpiredInterceptor } from './interceptors/jwt-expired.interceptor'; */\n\n/* import { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'; */\n\n/* import { metaReducers, reducers } from './states/root.reducer';\nimport { AuthEffects } from './states/auth/effects/auth.effects';\n\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { RouterEffects } from './states/router/effects/router.effects';\n\nimport { UserEffects } from './states/user/effects/user.effects';\nimport { AppEffects } from './states/app/effects'; */\n/* import { UsersEffects } from './states/users/effects'; */\n/* import { UsersService } from '../views/users/shared/users.service'; */\nimport { ProfileService } from './services/profile.service';\n\n/* import { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader'; */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotificationsService } from './services/notifications.service';\nimport { OffersService } from './services/offers.service';\n\n/* export function HttpLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient);\n} */\n\nexport const CORE_SERVICES: Provider[] = [\n  ProfileService,\n  OffersService,\n  NotificationsService\n  /* {\n    provide: HTTP_INTERCEPTORS,\n    useClass: JWTInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtExpiredInterceptor,\n    multi: true,\n  }, */\n  /*   { provide: MAT_DATE_LOCALE, useValue: 'ja-JP' },\n  { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n  { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  { provide: RouterStateSerializer, useClass: CustomSerializer }, */\n  /* {\n    provide: MatPaginatorIntl,\n    useClass: DatatablePaginatorIntl,\n    deps: [TranslateService],\n  }, */\n];\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    HttpClientModule\n    /*     StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' }),\n    StoreDevtoolsModule.instrument({ maxAge: 50 }),\n    EffectsModule.forRoot([\n      AppEffects,\n      AuthEffects,\n      UserEffects,\n      RouterEffects\n    ]),*/\n    /*  TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }) */\n    // InMemoryWebApiModule.forRoot(InMemoryDataService, { passThruUnknownUrl: true }),\n  ],\n  providers: CORE_SERVICES\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'CoreModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {select, Store} from '@ngrx/store';\nimport * as fromAuth from '../../auth/reducers/auth.reducer';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router, private store: Store) {\n    }\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return this.store.pipe(\n            select(fromAuth.selectAuthIsLoggedIn),\n            map(isLoggedIn => {\n                if (isLoggedIn) {\n                    return true;\n                }\n\n                this.router.navigate(['auth', 'signin']);\n                return false;\n            })\n        );\n    }\n}\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { User } from '../models/user.model';\n\nexport class FakeBackendService implements InMemoryDbService {\n  createDb() {\n    const users: User[] = [\n      {\n        id: 1,\n        username: 'carloscg',\n        name: 'Carlos',\n        surname: 'Caballero',\n        birthdate: '19/11/1984',\n        phone: '644039911',\n        phone2: '690940321',\n        email: 'carlos.caballero@gmail.com',\n        password: '1234',\n        roles: ['student'],\n        documentType: { uid: 1, name: 'NIF' },\n        documentNumber: '26808956H',\n        license: 'B1',\n        aboutMe: 'LOREM IPSUM',\n        otherCompetences: 'LOREM IPSUM',\n        address: {\n          street: 'Urbanización las Areanas - 45',\n          province: { uid: 4, name: 'Cádiz' },\n          municipe: { uid: 6, name: 'Chiclana de la Frontera' }\n        },\n        avatar_hash: 'assets/img/perfil.png',\n        studies: [\n          {\n            uid: 1,\n            level: { uid: 1, name: 'Ciclo Formativo' },\n            category: { uid: 2, name: 'Informática y comunicaciones' },\n            institution: {\n              uid: 2,\n              name: 'IES Politécnico Jesús Marin'\n            },\n            title: {\n              uid: 2,\n              name: 'Administracion de sistemas informaticos y redes'\n            },\n            grade: {\n              uid: 3,\n              name: 'Ciclo Formativo de Grado Superior'\n            },\n            date: '30/06/2005',\n            dual: false,\n            bilingue: true,\n            certificate: true\n          },\n          {\n            uid: 2,\n            institution: {\n              uid: 2,\n              name: 'IES Politécnico Jesús Marin'\n            },\n            category: { uid: 2, name: 'Informática y comunicaciones' },\n            level: { uid: 1, name: 'Ciclo Formativo' },\n            title: {\n              uid: 1,\n              name: 'Técnico Superior en Desarrollo de Aplicaciones Web'\n            },\n            grade: { uid: 3, name: 'Ciclo Formativo de Grado Superior' },\n            date: '30/06/2007',\n            dual: true,\n            bilingue: false,\n            certificate: false\n          }\n        ],\n        experiencies: [\n          {\n            uid: 1,\n            company: 'Suma',\n            position: 'Junior Software Developer',\n            date: '30/12/2016-20/01/2019'\n          }\n        ],\n        languages: [\n          {\n            uid: 1,\n            level: { uid: 5, name: 'C1' },\n            name: { uid: 1, name: 'Inglés' },\n            date: '30/06/2005'\n          },\n          {\n            uid: 2,\n            level: { uid: 4, name: 'B2' },\n            name: { uid: 2, name: 'Francés' },\n            date: '30/06/1998'\n          }\n        ],\n        offers: []\n        /*         experiences: [\n          {\n            id: 0,\n            eid: 0,\n            empresa: 'Suma',\n            date_incio: '1548320228',\n            date_fin: '1548320228',\n            puesto: 'Junior',\n            tareas: 'Desarrollador front-end'\n          },\n          {\n            id: 0,\n            eid: 1,\n            empresa: 'Indra',\n            date_incio: '1548320228',\n            date_fin: '1548320228',\n            puesto: 'Ingeniero',\n            tareas: 'Desarrollador back-end'\n          }\n        ],\n        languages: [\n          { id: 0, lid: 0, idioma: 'Inglés', nivel: 'B2', date: '30/06/2008' },\n          {\n            id: 0,\n            lid: 1,\n            idioma: 'Portugués',\n            nivel: 'A2',\n            date: '30/06/2013'\n          }\n        ]\n     */\n      },\n      {\n        id: 2,\n        username: 'dtome',\n        name: 'Daniel',\n        surname: 'Tomé Fernández',\n        birthdate: '27/09/1993',\n        phone: '666666666',\n        phone2: '677777666',\n        email: 'dtome24@uoc.edu',\n        password: '1234',\n        roles: ['company'],\n        documentType: { uid: 1, name: 'NIF' },\n        documentNumber: '26808956H',\n        license: 'B2',\n        aboutMe: 'LOREM IPSUM',\n        otherCompetences: 'LOREM IPSUM',\n        address: {\n          street: 'Avenida principal',\n          province: { uid: 4, name: 'Cádiz' },\n          municipe: { uid: 6, name: 'Chiclana de la Frontera' }\n        },\n        avatar_hash: 'assets/img/perfil.png',\n        studies: [\n          {\n            uid: 1,\n            level: { uid: 1, name: 'Ciclo Formativo' },\n            category: { uid: 2, name: 'Informática y comunicaciones' },\n            institution: {\n              uid: 2,\n              name: 'IES Politécnico Jesús Marin'\n            },\n            title: {\n              uid: 2,\n              name: 'Administracion de sistemas informaticos y redes'\n            },\n            grade: {\n              uid: 3,\n              name: 'Ciclo Formativo de Grado Superior'\n            },\n            date: '30/06/2005',\n            dual: false,\n            bilingue: true,\n            certificate: true\n          },\n          {\n            uid: 2,\n            institution: {\n              uid: 2,\n              name: 'IES Politécnico Jesús Marin'\n            },\n            category: { uid: 2, name: 'Informática y comunicaciones' },\n            level: { uid: 1, name: 'Ciclo Formativo' },\n            title: {\n              uid: 2,\n              name: 'Administracion de sistemas informaticos y redes'\n            },\n            grade: { uid: 3, name: 'Ciclo Formativo de Grado Superior' },\n            date: '30/06/2007',\n            dual: true,\n            bilingue: false,\n            certificate: false\n          },\n          {\n            uid: 3,\n            level: { uid: 2, name: 'Título universitario' },\n            title: {\n              uid: 2,\n              name: 'Administracion de sistemas informaticos y redes'\n            },\n            certificate: true,\n            date: '30/06/2007',\n            bilingue: true,\n            name: 'Grado en Ingeniería Informática',\n            institution: 'Universidad Rovira i Virgili'\n          }\n        ],\n        experiencies: [\n          {\n            uid: 1,\n            company: 'Suma',\n            position: 'Junior Software Developer',\n            date: '30/12/2016-20/01/2019'\n          }\n        ],\n        languages: [\n          {\n            uid: 1,\n            level: { uid: 5, name: 'C1' },\n            name: { uid: 1, name: 'Inglés' },\n            date: '30/06/2005'\n          },\n          {\n            uid: 2,\n            level: { uid: 4, name: 'B2' },\n            name: { uid: 2, name: 'Francés' },\n            date: '30/06/1998'\n          }\n        ],\n        offers: []\n      }\n    ];\n\n    const offers: any[] = [\n      {\n        id: 1,\n        company: {\n          uid: 33,\n          name: 'Coritel'\n        },\n        job: {\n          name: 'Programador Jr Java',\n          description: 'Programación y prueba unitaria en Java'\n        },\n        province: { uid: 1, name: 'Málaga' },\n        municipe: { uid: 7, name: 'Estepona' },\n        date: '21/09/2006',\n        category: { uid: 2, name: 'Informática y Comunicaciones' },\n        title: [\n          { uid: 1, name: 'Desarrollo Aplicaciones Web' },\n          { uid: 4, name: 'Desarrollo Aplicaciones Multiplataforma' }\n        ]\n      },\n      {\n        id: 2,\n        company: {\n          uid: 33,\n          name: 'Coritel'\n        },\n        job: {\n          name: 'Comercial',\n          description:\n            'Relaciones con los clientes y atención a las redes sociales.'\n        },\n        province: { uid: 1, name: 'Málaga' },\n        municipe: { uid: 8, name: 'Campanillas (PTA)' },\n        date: '21/09/2016',\n        category: { uid: 4, name: 'Comercio y Marketing' },\n        title: [{ uid: 5, name: 'Gestión Comercial y Empresarial' }]\n      },\n      {\n        id: 3,\n        company: {\n          uid: 33,\n          name: 'Coritel'\n        },\n        job: {\n          name: 'Analista Programador Java',\n          description:\n            'Análisis funcional y diseño técnico/detallado de componentes'\n        },\n        province: { uid: 5, name: 'Granada' },\n        municipe: { uid: 9, name: 'Motril' },\n        date: '11/07/2016',\n        category: { uid: 2, name: 'Informática y Comunicaciones' },\n        title: [{ uid: 4, name: 'Desarrollo Aplicaciones Multiplataforma' }]\n      },\n      {\n        id: 4,\n        company: {\n          uid: 35,\n          name: 'Indra'\n        },\n        job: {\n          name: 'Administrativo',\n          description: 'Gestión de cartera de clientes.'\n        },\n        province: { uid: 2, name: 'Sevilla' },\n        municipe: { uid: 10, name: 'Osuna' },\n        date: '01/12/2015',\n        category: { uid: 5, name: 'Administración y Gestión' },\n        title: [{ uid: 6, name: 'Empresariales' }]\n      }\n    ];\n    return { users, offers };\n  }\n}\n","import {MatDialogModule} from '@angular/material/dialog';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTableModule} from '@angular/material/table';\nimport {NgModule} from '@angular/core';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatMenuModule,\n        MatIconModule,\n        MatCardModule,\n        MatSliderModule,\n        MatProgressBarModule,\n        MatAutocompleteModule,\n        MatInputModule,\n        MatGridListModule,\n        MatSnackBarModule,\n        MatProgressSpinnerModule,\n        MatTooltipModule,\n        MatListModule,\n        MatDialogModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatTableModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatMenuModule,\n        MatIconModule,\n        MatCardModule,\n        MatSliderModule,\n        MatProgressBarModule,\n        MatAutocompleteModule,\n        MatInputModule,\n        MatGridListModule,\n        MatSnackBarModule,\n        MatProgressSpinnerModule,\n        MatTooltipModule,\n        MatListModule,\n        MatDialogModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatTableModule\n    ],\n})\n\nexport class MaterialModule {}\n","/* import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'; */\nimport { Component, Inject } from \"@angular/core\";\n\n@Component({\n  selector: \"app-confirm\",\n  template: `\n    <!--  <h1 matDialogTitle>{{ data.title }}</h1>\n    <div mat-dialog-content>{{ data.message }}</div>\n    <div mat-dialog-actions>\n      <button\n        type=\"button\"\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"dialogRef.close(true)\"\n      >\n        OK\n      </button>\n      &nbsp;\n      <span fxFlex></span>\n      <button\n        type=\"button\"\n        color=\"accent\"\n        mat-raised-button\n        (click)=\"dialogRef.close(false)\"\n      >\n        Cancel\n      </button>\n    </div> -->\n  `\n})\nexport class AppComfirmComponent {\n  constructor() /*  public dialogRef: MatDialogRef<AppComfirmComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any */\n  {}\n}\n","import { Observable } from 'rxjs';\n/* import { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material'; */\nimport { Injectable } from '@angular/core';\n\nimport { AppComfirmComponent } from './app-confirm.component';\n\ninterface ConfirmData {\n  title?: string;\n  message?: string;\n}\n\n@Injectable()\nexport class AppConfirmService {\n  constructor(/* private dialog: MatDialog */) {}\n\n  public confirm(data: ConfirmData = {}) /*:  Observable<boolean> */ {\n    /*  data.title = data.title || 'Confirm';\n    data.message = data.message || 'Are you sure?';\n    let dialogRef: MatDialogRef<AppComfirmComponent>;\n    dialogRef = this.dialog.open(AppComfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: { title: data.title, message: data.message }\n    });\n    return dialogRef.afterClosed(); */\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../app.settings';\n/* import { MatSnackBar } from '@angular/material'; */\n\n@Injectable()\nexport class NotificationsService {\n  constructor(/* private snackBar: MatSnackBar */) {}\n\n  showNotification(message: string, action: string) {\n    /*     this.snackBar.open(message, action, {\n      duration: AppSettings.NOTIFICATIONS.DEFAULT_TIME\n    }); */\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../app.settings';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\nimport { Offer } from '../models/offer.model';\n\n@Injectable()\nexport class OffersService {\n  private _offers: Offer[] = [{}] as Offer[];\n\n  constructor(\n    private http: HttpClient /* , private store$: Store<AppStore> */\n  ) {}\n\n  set offers(_offers) {\n    this._offers = _offers;\n  }\n  get offers() {\n    return this._offers;\n  }\n\n  getOffers() {\n    return this.http.get<any>(AppSettings.API_ENDPOINT_OFFERS);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../app.settings';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\nimport { User } from '../models/user.model';\n\n@Injectable()\nexport class ProfileService {\n  private _user: User = {} as User;\n\n  constructor(\n    private http: HttpClient /* , private store$: Store<AppStore> */\n  ) {}\n\n  set user(_user) {\n    this._user = _user;\n  }\n  get user() {\n    return this._user;\n  }\n  loadProfile() {\n    return this.user;\n    //return this.http.get<UserOptions>(AppSettings.API_ENDPOINT_USER_ME);\n  }\n  logout(): void {\n    /*  this.store$.dispatch(new UserActions.Logout()); */\n  }\n  public updateProfile(profile: any /* User */): Observable<any /* User */> {\n    return this.http.put<any>(AppSettings.API_ENDPOINT_USERS, { ...profile });\n  }\n  public signupProfile(profile: any /* UserOptions */): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_USER_CREATE,\n      profile\n    );\n  }\n  public requestRememberPassword(uid: { uid: string }): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_USER_REQUEST_REMEMBER_PASSWORD,\n      uid\n    );\n  }\n  public rememberPassword(uidAndHash: {\n    uid: string;\n    hash: string;\n  }): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_USER_REMEMBER_PASSWORD,\n      uidAndHash\n    );\n  }\n  public confirmUser(uidAndHash: {\n    uid: string;\n    hash: string;\n  }): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_CONFIRM_USER,\n      uidAndHash\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n/*\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar'; */\n\n// COMPONENTS\nimport { AppComfirmComponent } from './services/app-confirm/app-confirm.component';\nimport { AdminLayoutComponent } from './components/admin-layout/admin-layout.component';\n\n// DIRECTIVES\n\n// PIPES\n\n// SERVICES\nimport { AppConfirmService } from './services/app-confirm/app-confirm.service';\nimport {AuthGuard} from './guards/auth.guard';\nimport {MaterialModule} from './material.module';\n\nconst declarations = [AppComfirmComponent, AdminLayoutComponent];\nconst sharedExports = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  RouterModule,\n  AppComfirmComponent,\n  AdminLayoutComponent\n];\nconst providers = [AppConfirmService, AuthGuard];\n\n@NgModule({\n  imports: [CommonModule, MaterialModule, FormsModule, ReactiveFormsModule, RouterModule],\n  entryComponents: [AppComfirmComponent],\n  providers,\n  declarations,\n  exports: sharedExports\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"]}