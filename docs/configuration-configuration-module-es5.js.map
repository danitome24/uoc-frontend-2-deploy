{"version":3,"sources":["webpack:///src/app/profile/configuration/configuration-routing.module.ts","webpack:///src/app/profile/configuration/configuration.component.ts","webpack:///src/app/profile/configuration/configuration.component.html","webpack:///src/app/profile/configuration/configuration.module.ts"],"names":["routes","path","component","ConfigurationRoutingModule","forChild","imports","exports","ConfigurationComponent","store","availableAppLanguages","APP_LOCALES","sendNotifications$","pipe","localeSelected$","event","console","log","sendNotifications","checked","dispatch","notificationsUpdate","selectedLocale","find","locale","id","value","localeUpdate","updateAppLocale","updateNotifications","selector","templateUrl","styleUrls","ConfigurationModule","declarations"],"mappings":"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","file":"configuration-configuration-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ConfigurationComponent} from './configuration.component';\n//import { CompanyRoleGuard } from '../../shared/guards/company-role.guard';\n\nconst routes: Routes = [{\n    path: '',\n    component: ConfigurationComponent,\n    //canActivate: [CompanyRoleGuard]\n}];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConfigurationRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AppSettings} from '../../shared/app.settings';\nimport {select, Store} from '@ngrx/store';\nimport * as fromConfig from '../reducers/configuration.reducer';\nimport * as fromConfigActions from '../actions/configuration.actions';\n\n@Component({\n    selector: 'app-configuration',\n    templateUrl: './configuration.component.html',\n    styleUrls: ['./configuration.component.scss']\n})\nexport class ConfigurationComponent implements OnInit {\n\n    public availableAppLanguages;\n    public sendNotifications$;\n    public localeSelected$;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit(): void {\n        this.availableAppLanguages = AppSettings.APP_LOCALES;\n        this.sendNotifications$ = this.store.pipe(\n            select(fromConfig.selectConfigurationSendNotifications),\n        );\n        this.localeSelected$ = this.store.pipe(\n            select(fromConfig.selectConfigurationAppLocale),\n        );\n    }\n\n    updateNotifications(event) {\n        console.log(event);\n        const sendNotifications = event.checked;\n        this.store.dispatch(fromConfigActions.actions.notificationsUpdate({sendNotifications}));\n    }\n\n    updateAppLocale(event) {\n        const selectedLocale = AppSettings.APP_LOCALES.find((locale) => {\n            return locale.id == event.value;\n        });\n        this.store.dispatch(fromConfigActions.actions.localeUpdate({locale: selectedLocale}));\n    }\n}\n","<mat-card>\n    <mat-card-header>\n        <div mat-card-avatar></div>\n        <mat-card-title>Configuración</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <div>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Idioma de la aplicación:</mat-label>\n                <mat-select (selectionChange)=\"updateAppLocale($event)\">\n                    <mat-option *ngFor=\"let lang of availableAppLanguages\" [value]=\"lang.id\">\n                        {{lang.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div>\n            <mat-label>Recibir notificaciones:\n                <mat-checkbox color=\"primary\" (change)=\"updateNotifications($event)\" [checked]=\"sendNotifications$ | async\">\n                </mat-checkbox>\n            </mat-label>\n        </div>\n    </mat-card-content>\n</mat-card>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ConfigurationRoutingModule} from './configuration-routing.module';\nimport {ConfigurationComponent} from './configuration.component';\nimport {MaterialModule} from '../../shared/material.module';\n\n\n@NgModule({\n    declarations: [ConfigurationComponent],\n    imports: [\n        CommonModule,\n        ConfigurationRoutingModule,\n        MaterialModule\n    ]\n})\nexport class ConfigurationModule {\n}\n"]}