{"version":3,"sources":["webpack:///src/app/offers/offers-detail/offers-detail.component.ts","webpack:///src/app/offers/offers-detail/offers-detail.component.html","webpack:///src/app/offers/offers-list/offers-list.component.ts","webpack:///src/app/offers/offers-list/offers-list.component.html","webpack:///src/app/offers/offers-profile/offers-profile.component.ts","webpack:///src/app/offers/offers-profile/offers-profile.component.html","webpack:///src/app/offers/offers-routing.module.ts","webpack:///src/app/offers/offers.component.ts","webpack:///src/app/offers/offers.component.html","webpack:///src/app/offers/offers.module.ts"],"names":["OffersDetailComponent","profileService","offersService","route","router","store","user","params","subscribe","offers","offerID","id","offer","find","isSubscribed$","pipe","offerId","dispatch","subscribeToOffer","navigate","unsubscribeToOffer","title","map","tags","name","toString","selector","templateUrl","styleUrls","OffersListComponent","displayColumns","selectOffers","listOffers","offersStudy$","offersOther$","OffersProfileComponent","offers$","routes","path","component","data","my_offers","OffersRoutingModule","forChild","imports","exports","OffersComponent","isOffersList","OffersModule","declarations"],"mappings":"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","file":"offers-offers-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {OffersService} from 'src/app/shared/services/offers.service';\nimport {Offer} from 'src/app/shared/models/offer.model';\nimport {ProfileService} from 'src/app/shared/services/profile.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {User} from 'src/app/shared/models/user.model';\nimport {select, Store} from '@ngrx/store';\nimport * as fromMyOffers from '../actions/my-offers.actions';\nimport * as fromMyOffersReducer from '../reducers/my-offers.reducer';\n\n@Component({\n    selector: 'app-offers-detail',\n    templateUrl: './offers-detail.component.html',\n    styleUrls: ['./offers-detail.component.scss']\n})\nexport class OffersDetailComponent implements OnInit {\n    offer: Offer;\n    user: User;\n    public isSubscribed$;\n\n    constructor(\n        private profileService: ProfileService,\n        private offersService: OffersService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private store: Store,\n    ) {\n        this.user = this.profileService.user;\n        this.route.params.subscribe(params => {\n            const offers = this.offersService.offers;\n\n            const offerID = +params.id;\n            this.offer = (offers.find(offer => offer.id === offerID) || {}) as Offer;\n            this.isSubscribed$ = this.store.pipe(\n                select(fromMyOffersReducer.selectIsUserSubscribedTo, {offerId: this.offer.id}),\n            );\n        });\n    }\n\n    subscribeOffer() {\n        this.store.dispatch(fromMyOffers.actions.subscribeToOffer({offerId: this.offer.id}));\n        this.router.navigate(['/admin/profile']);\n    }\n\n    unsubscribeOffer() {\n        this.store.dispatch(fromMyOffers.actions.unsubscribeToOffer({offerId: this.offer.id}));\n        this.router.navigate(['/admin/profile']);\n    }\n\n    ngOnInit() {\n    }\n\n    tagsFromOffer() {\n        return this.offer.title.map(tags => tags.name).toString();\n    }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Detalles de la oferta</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <mat-list>\n            <mat-list-item>Empresa: {{offer.company.name}}</mat-list-item>\n            <mat-list-item>Puesto: {{offer.job.name}}</mat-list-item>\n            <mat-list-item>Provincia: {{offer.province.name}}</mat-list-item>\n            <mat-list-item>Municipio: {{offer.municipe.name}}</mat-list-item>\n            <mat-list-item>Fecha publicación: {{offer.date}}</mat-list-item>\n            <mat-list-item>Categoría: {{offer.category.name}}</mat-list-item>\n            <mat-list-item>Tags: {{tagsFromOffer()}}</mat-list-item>\n        </mat-list>\n\n        <button mat-button color=\"primary\" *ngIf=\"!(isSubscribed$ | async )\"\n                class=\"btn btn-primary\"\n                (click)=\"subscribeOffer()\">\n            Inscribirse\n        </button>\n        <button mat-button color=\"primary\"\n                *ngIf=\"(isSubscribed$ | async )\"\n                class=\"btn btn-danger\"\n                (click)=\"unsubscribeOffer()\">\n            Eliminar oferta\n        </button>\n    </mat-card-content>\n</mat-card>\n","import {Component, OnInit} from '@angular/core';\nimport {OffersService} from 'src/app/shared/services/offers.service';\nimport {ProfileService} from 'src/app/shared/services/profile.service';\nimport {select, Store} from '@ngrx/store';\nimport * as fromOffer from '../actions/offer.actions';\nimport * as fromOfferSelects from '../reducers/offer.reducer';\n\n@Component({\n    selector: 'app-offers-list',\n    templateUrl: './offers-list.component.html'\n})\nexport class OffersListComponent implements OnInit {\n    public offersStudy$;\n    public offersOther$;\n    public displayColumns = ['job', 'company', 'category', 'date', 'province', 'municipe', 'subscribed', 'actions']\n\n    constructor(\n        private profileService: ProfileService,\n        private offersService: OffersService,\n        private store: Store\n    ) {\n        this.selectOffers();\n    }\n\n    private selectOffers() {\n        this.store.dispatch(fromOffer.actions.listOffers({}));\n        this.offersStudy$ = this.store.pipe(\n            select(fromOfferSelects.selectOffersByUserStudies),\n        );\n        this.offersOther$ = this.store.pipe(\n            select(fromOfferSelects.selectOffersNotMatchingUserStudies)\n        );\n    }\n\n    ngOnInit() {\n    }\n}\n","<h3>Cumple con la Titulación (Familia)</h3>\n\n<table mat-table [dataSource]=\"offersStudy$\">\n    <ng-container matColumnDef=\"job\">\n        <th mat-header-cell *matHeaderCellDef> Puesto</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{offer.job.name}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"company\">\n        <th mat-header-cell *matHeaderCellDef> Empresa</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.company.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef> Familia</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.category.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef> Fecha</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.date }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"province\">\n        <th mat-header-cell *matHeaderCellDef> Provincia</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.province.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"municipe\">\n        <th mat-header-cell *matHeaderCellDef> Municipio</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.municipe.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"subscribed\">\n        <th mat-header-cell *matHeaderCellDef> Inscrito</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.subscribe ? 'Sí' : 'No' }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Acciones</th>\n        <td mat-cell *matCellDef=\"let offer\">\n            <a mat-button color=\"primary\" style=\"cursor:pointer\" [routerLink]=\"[offer.id]\">Ver Detalle</a>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n</table>\n","import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport * as fromMyOffers from '../reducers/my-offers.reducer';\nimport * as fromOffer from '../actions/offer.actions';\n\n@Component({\n    selector: 'app-offers-profile',\n    templateUrl: './offers-profile.component.html'\n})\nexport class OffersProfileComponent implements OnInit {\n    public offers$;\n    public displayColumns = ['job', 'company', 'category', 'date', 'province', 'municipe', 'actions'];\n\n    constructor(private store: Store) {\n        this.selectOffers();\n    }\n\n    private selectOffers() {\n        this.store.dispatch(fromOffer.actions.listOffers({}));\n        this.offers$ = this.store.pipe(\n            select(fromMyOffers.selectMyOffers),\n        );\n    }\n\n    ngOnInit() {\n    }\n}\n","<table mat-table [dataSource]=\"offers$\">\n    <ng-container matColumnDef=\"job\">\n        <th mat-header-cell *matHeaderCellDef> Puesto</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.job.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"company\">\n        <th mat-header-cell *matHeaderCellDef> Puesto</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.company.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef> Familia</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.category.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef> Fecha</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.date }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"province\">\n        <th mat-header-cell *matHeaderCellDef> Provincia</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.province.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"municipe\">\n        <th mat-header-cell *matHeaderCellDef> Municipio</th>\n        <td mat-cell *matCellDef=\"let offer\"> {{ offer.municipe.name }} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n        <th mat-header-cell *matHeaderCellDef> Acciones</th>\n        <td mat-cell *matCellDef=\"let offer\">\n            <a mat-button color=\"primary\" style=\"cursor:pointer\" [routerLink]=\"['/admin/offers/', offer.id]\">Ver\n                Detalle</a>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailComponent } from './offers-detail/offers-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OffersComponent\n  },\n  {\n    path: 'my-offers',\n    component: OffersComponent,\n    data: { my_offers: true }\n  },\n  {\n    path: ':id',\n    component: OffersDetailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.scss']\n})\nexport class OffersComponent implements OnInit {\n  isOffersList = true;\n  constructor(private route: ActivatedRoute) {\n    this.route.data.subscribe(\n      params => (this.isOffersList = !params.my_offers)\n    );\n  }\n\n  ngOnInit() {}\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Ofertas</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <app-offers-list *ngIf=\"isOffersList\"></app-offers-list>\n        <app-offers-profile *ngIf=\"!isOffersList\"></app-offers-profile>\n    </mat-card-content>\n</mat-card>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {OffersRoutingModule} from './offers-routing.module';\nimport {OffersComponent} from './offers.component';\nimport {OffersDetailComponent} from './offers-detail/offers-detail.component';\nimport {OffersListComponent} from './offers-list/offers-list.component';\nimport {OffersProfileComponent} from './offers-profile/offers-profile.component';\nimport {AuthModule} from '../auth/auth.module';\nimport {MaterialModule} from '../shared/material.module';\n\n@NgModule({\n    declarations: [\n        OffersComponent,\n        OffersProfileComponent,\n        OffersListComponent,\n        OffersDetailComponent\n    ],\n    imports: [CommonModule, OffersRoutingModule, AuthModule, MaterialModule]\n})\nexport class OffersModule {\n}\n"]}